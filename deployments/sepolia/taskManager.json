{
  "address": "0x34504D647138A33dfa9a8a7540454d3998177F00",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "TaskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "TaskDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum taskManager.TaskStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "TaskUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "deleteTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "editTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTask",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "enum taskManager.TaskStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct taskManager.Task[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTaskCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "markTaskCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x707edfe362d1a8288ede4647c7429890312810c2f1321dda833c290cb24a8570",
  "receipt": {
    "to": null,
    "from": "0x712c670352E964c29430e5f6F64bE8A1E73ff4f2",
    "contractAddress": "0x34504D647138A33dfa9a8a7540454d3998177F00",
    "transactionIndex": 91,
    "gasUsed": "1453146",
    "logsBloom": "0x
    "blockHash": "0xfa3cd340d58cc0b4dcced8ec93abba1e97f726cef7f8e29d6a3869112dc91860",
    "transactionHash": "0x707edfe362d1a8288ede4647c7429890312810c2f1321dda833c290cb24a8570",
    "logs": [
      {
        "transactionIndex": 91,
        "blockNumber": 7859378,
        "transactionHash": "0x707edfe362d1a8288ede4647c7429890312810c2f1321dda833c290cb24a8570",
        "address": "0x34504D647138A33dfa9a8a7540454d3998177F00",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000712c670352e964c29430e5f6f64be8a1e73ff4f2"
        ],
        "data": "0x",
        "logIndex": 93,
        "blockHash": "0xfa3cd340d58cc0b4dcced8ec93abba1e97f726cef7f8e29d6a3869112dc91860"
      }
    ],
    "blockNumber": 7859378,
    "cumulativeGasUsed": "7849218",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x712c670352E964c29430e5f6F64bE8A1E73ff4f2"
  ],
  "numDeployments": 2,
  "solcInputHash": "ac240f121499cfad9698109861c9ca31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"TaskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"TaskDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum taskManager.TaskStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"TaskUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taskId\",\"type\":\"uint256\"}],\"name\":\"deleteTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taskId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"editTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTask\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum taskManager.TaskStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct taskManager.Task[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaskCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taskId\",\"type\":\"uint256\"}],\"name\":\"markTaskCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/taskManager.sol\":\"taskManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/taskManager.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.8;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\ncontract taskManager is Ownable{\\n    enum TaskStatus {Pending,Completed}\\n    struct Task{\\n        uint id;\\n        string title;\\n        string description;\\n        TaskStatus status;\\n        address owner;\\n    }\\n    uint private taskCounter;\\n    mapping(uint=>Task) private tasks;\\n\\n    event TaskCreated(uint taskId,string title,string description,address owner);\\n    event TaskUpdated(uint taskId,string title,string description,TaskStatus status);\\n    event TaskDeleted(uint taskId);\\n    constructor(address initialOwner) Ownable(initialOwner) {\\n        taskCounter = 0;\\n    }\\n\\n    modifier onlyTaskOwner(uint _taskId){\\n        require(tasks[_taskId].owner==msg.sender,\\\"Not Task Owner\\\");\\n        _;\\n    }\\n    function addTask(string memory _title,\\n    string memory _description\\n    )external{\\n        taskCounter++;\\n        tasks[taskCounter]=Task(taskCounter,\\n        _title,\\n        _description,\\n        TaskStatus.Pending,\\n        msg.sender);\\n    }\\n    function markTaskCompleted(uint _taskId) external onlyTaskOwner(_taskId){\\n        tasks[_taskId].status=TaskStatus.Completed;\\n\\n        emit TaskUpdated(_taskId,\\n        tasks[_taskId].title,\\n        tasks[_taskId].description,\\n        TaskStatus.Completed\\n        );\\n    }\\n    function editTask(uint _taskId,string memory _title, string memory _description) external onlyTaskOwner(_taskId){\\n        Task storage task= tasks[_taskId];\\n        task.title=_title;\\n        task.description=_description;\\n        emit TaskUpdated(\\n            _taskId,\\n            _title,\\n            _description,\\n            task.status\\n        );\\n\\n    }\\n    function deleteTask(uint _taskId) external onlyTaskOwner(_taskId){\\n        delete tasks[_taskId];\\n        emit TaskDeleted(_taskId);\\n    }\\n    \\n    function getTask() external  view  returns(Task[] memory){\\n        uint count=0;\\n\\n        for(uint i=1;i<=taskCounter;i++){\\n            if(tasks[i].owner==msg.sender){\\n                count++;\\n            }\\n        }\\n        Task[] memory finalTasks= new Task[](count);\\n        uint index=0;\\n\\n        for(uint i=1;i<=taskCounter;i++){\\n            if(tasks[i].owner==msg.sender){\\n                finalTasks[index]=tasks[i];\\n                index++;\\n            }\\n        }\\n        return finalTasks;\\n\\n        \\n    }\\n    function getTaskCounter() external view returns (uint){\\n        return taskCounter;\\n    }\\n\\n}\",\"keccak256\":\"0x1197b1c901b2c941f4d738a810820d818cfc456aa2ed2419a99bf1754530d3fd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611b11380380611b11833981810160405281019061003291906101ea565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610226565b60405180910390fd5b6100b4816100c360201b60201c565b50600060018190555050610241565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b78261018c565b9050919050565b6101c7816101ac565b81146101d257600080fd5b50565b6000815190506101e4816101be565b92915050565b600060208284031215610200576101ff610187565b5b600061020e848285016101d5565b91505092915050565b610220816101ac565b82525050565b600060208201905061023b6000830184610217565b92915050565b6118c1806102506000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80638da5cb5b116100665780638da5cb5b146100f5578063a31662d214610113578063b37b100014610131578063c4c88ee31461014d578063f2fde38b1461016b57610092565b80620b2bda146100975780634103c62e146100b3578063560f3192146100cf578063715018a6146100eb575b600080fd5b6100b160048036038101906100ac9190610d4e565b610187565b005b6100cd60048036038101906100c89190610ec1565b6102d7565b005b6100e960048036038101906100e49190610d4e565b61040c565b005b6100f3610565565b005b6100fd610579565b60405161010a9190610f8d565b60405180910390f35b61011b6105a2565b60405161012891906111fb565b60405180910390f35b61014b6004803603810190610146919061121d565b61093a565b005b610155610a6d565b60405161016291906112a4565b60405180910390f35b610185600480360381019061018091906112eb565b610a77565b005b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022390611375565b60405180910390fd5b60016002600084815260200190815260200160002060030160006101000a81548160ff0219169083600181111561026657610265611062565b5b02179055507f5cd8767f4486de3add411f428feb5bc9b1b3531977feb0c2eab980baf8a6a1e382600260008581526020019081526020016000206001016002600086815260200190815260200160002060020160016040516102cb949392919061149d565b60405180910390a15050565b823373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390611375565b60405180910390fd5b6000600260008681526020019081526020016000209050838160010190816103a49190611687565b50828160020190816103b69190611687565b507f5cd8767f4486de3add411f428feb5bc9b1b3531977feb0c2eab980baf8a6a1e38585858460030160009054906101000a900460ff166040516103fd9493929190611792565b60405180910390a15050505050565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890611375565b60405180910390fd5b600260008381526020019081526020016000206000808201600090556001820160006104dd9190610c50565b6002820160006104ed9190610c50565b6003820160006101000a81549060ff02191690556003820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550507fd078b251d950cc55c44340be1db732337ef4939a76e1367ee271ad2cb19c46af8260405161055991906112a4565b60405180910390a15050565b61056d610afd565b6105776000610b84565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600080600190505b6001548111610640573373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361062d57818061062990611814565b9250505b808061063890611814565b9150506105ac565b5060008167ffffffffffffffff81111561065d5761065c610d96565b5b60405190808252806020026020018201604052801561069657816020015b610683610c90565b81526020019060019003908161067b5790505b509050600080600190505b6001548111610930573373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361091d57600260008281526020019081526020016000206040518060a00160405290816000820154815260200160018201805461074b906113c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610777906113c4565b80156107c45780601f10610799576101008083540402835291602001916107c4565b820191906000526020600020905b8154815290600101906020018083116107a757829003601f168201915b505050505081526020016002820180546107dd906113c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610809906113c4565b80156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b505050505081526020016003820160009054906101000a900460ff16600181111561088457610883611062565b5b600181111561089657610895611062565b5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508383815181106109035761090261185c565b5b6020026020010181905250818061091990611814565b9250505b808061092890611814565b9150506106a1565b5081935050505090565b6001600081548092919061094d90611814565b91905055506040518060a0016040528060015481526020018381526020018281526020016000600181111561098557610984611062565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff168152506002600060015481526020019081526020016000206000820151816000015560208201518160010190816109d89190611687565b5060408201518160020190816109ee9190611687565b5060608201518160030160006101000a81548160ff02191690836001811115610a1a57610a19611062565b5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b6000600154905090565b610a7f610afd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ae89190610f8d565b60405180910390fd5b610afa81610b84565b50565b610b05610c48565b73ffffffffffffffffffffffffffffffffffffffff16610b23610579565b73ffffffffffffffffffffffffffffffffffffffff1614610b8257610b46610c48565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b799190610f8d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b508054610c5c906113c4565b6000825580601f10610c6e5750610c8d565b601f016020900490600052602060002090810190610c8c9190610ce7565b5b50565b6040518060a0016040528060008152602001606081526020016060815260200160006001811115610cc457610cc3611062565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610d00576000816000905550600101610ce8565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d2b81610d18565b8114610d3657600080fd5b50565b600081359050610d4881610d22565b92915050565b600060208284031215610d6457610d63610d0e565b5b6000610d7284828501610d39565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610dce82610d85565b810181811067ffffffffffffffff82111715610ded57610dec610d96565b5b80604052505050565b6000610e00610d04565b9050610e0c8282610dc5565b919050565b600067ffffffffffffffff821115610e2c57610e2b610d96565b5b610e3582610d85565b9050602081019050919050565b82818337600083830152505050565b6000610e64610e5f84610e11565b610df6565b905082815260208101848484011115610e8057610e7f610d80565b5b610e8b848285610e42565b509392505050565b600082601f830112610ea857610ea7610d7b565b5b8135610eb8848260208601610e51565b91505092915050565b600080600060608486031215610eda57610ed9610d0e565b5b6000610ee886828701610d39565b935050602084013567ffffffffffffffff811115610f0957610f08610d13565b5b610f1586828701610e93565b925050604084013567ffffffffffffffff811115610f3657610f35610d13565b5b610f4286828701610e93565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7782610f4c565b9050919050565b610f8781610f6c565b82525050565b6000602082019050610fa26000830184610f7e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fdd81610d18565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101d578082015181840152602081019050611002565b60008484015250505050565b600061103482610fe3565b61103e8185610fee565b935061104e818560208601610fff565b61105781610d85565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106110a2576110a1611062565b5b50565b60008190506110b382611091565b919050565b60006110c3826110a5565b9050919050565b6110d3816110b8565b82525050565b6110e281610f6c565b82525050565b600060a0830160008301516111006000860182610fd4565b50602083015184820360208601526111188282611029565b915050604083015184820360408601526111328282611029565b915050606083015161114760608601826110ca565b50608083015161115a60808601826110d9565b508091505092915050565b600061117183836110e8565b905092915050565b6000602082019050919050565b600061119182610fa8565b61119b8185610fb3565b9350836020820285016111ad85610fc4565b8060005b858110156111e957848403895281516111ca8582611165565b94506111d583611179565b925060208a019950506001810190506111b1565b50829750879550505050505092915050565b600060208201905081810360008301526112158184611186565b905092915050565b6000806040838503121561123457611233610d0e565b5b600083013567ffffffffffffffff81111561125257611251610d13565b5b61125e85828601610e93565b925050602083013567ffffffffffffffff81111561127f5761127e610d13565b5b61128b85828601610e93565b9150509250929050565b61129e81610d18565b82525050565b60006020820190506112b96000830184611295565b92915050565b6112c881610f6c565b81146112d357600080fd5b50565b6000813590506112e5816112bf565b92915050565b60006020828403121561130157611300610d0e565b5b600061130f848285016112d6565b91505092915050565b600082825260208201905092915050565b7f4e6f74205461736b204f776e6572000000000000000000000000000000000000600082015250565b600061135f600e83611318565b915061136a82611329565b602082019050919050565b6000602082019050818103600083015261138e81611352565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113dc57607f821691505b6020821081036113ef576113ee611395565b5b50919050565b60008190508160005260206000209050919050565b60008154611417816113c4565b6114218186611318565b9450600182166000811461143c576001811461145257611485565b60ff198316865281151560200286019350611485565b61145b856113f5565b60005b8381101561147d5781548189015260018201915060208101905061145e565b808801955050505b50505092915050565b611497816110b8565b82525050565b60006080820190506114b26000830187611295565b81810360208301526114c4818661140a565b905081810360408301526114d8818561140a565b90506114e7606083018461148e565b95945050505050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261153d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611500565b6115478683611500565b95508019841693508086168417925050509392505050565b6000819050919050565b600061158461157f61157a84610d18565b61155f565b610d18565b9050919050565b6000819050919050565b61159e83611569565b6115b26115aa8261158b565b84845461150d565b825550505050565b600090565b6115c76115ba565b6115d2818484611595565b505050565b5b818110156115f6576115eb6000826115bf565b6001810190506115d8565b5050565b601f82111561163b5761160c816113f5565b611615846114f0565b81016020851015611624578190505b611638611630856114f0565b8301826115d7565b50505b505050565b600082821c905092915050565b600061165e60001984600802611640565b1980831691505092915050565b6000611677838361164d565b9150826002028217905092915050565b61169082610fe3565b67ffffffffffffffff8111156116a9576116a8610d96565b5b6116b382546113c4565b6116be8282856115fa565b600060209050601f8311600181146116f157600084156116df578287015190505b6116e9858261166b565b865550611751565b601f1984166116ff866113f5565b60005b8281101561172757848901518255600182019150602085019450602081019050611702565b868310156117445784890151611740601f89168261164d565b8355505b6001600288020188555050505b505050505050565b600061176482610fe3565b61176e8185611318565b935061177e818560208601610fff565b61178781610d85565b840191505092915050565b60006080820190506117a76000830187611295565b81810360208301526117b98186611759565b905081810360408301526117cd8185611759565b90506117dc606083018461148e565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061181f82610d18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611851576118506117e5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207ad385d99849a876d24c8876101a661a0ecd5f82b9c889986d25b8fecae11c5764736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100925760003560e01c80638da5cb5b116100665780638da5cb5b146100f5578063a31662d214610113578063b37b100014610131578063c4c88ee31461014d578063f2fde38b1461016b57610092565b80620b2bda146100975780634103c62e146100b3578063560f3192146100cf578063715018a6146100eb575b600080fd5b6100b160048036038101906100ac9190610d4e565b610187565b005b6100cd60048036038101906100c89190610ec1565b6102d7565b005b6100e960048036038101906100e49190610d4e565b61040c565b005b6100f3610565565b005b6100fd610579565b60405161010a9190610f8d565b60405180910390f35b61011b6105a2565b60405161012891906111fb565b60405180910390f35b61014b6004803603810190610146919061121d565b61093a565b005b610155610a6d565b60405161016291906112a4565b60405180910390f35b610185600480360381019061018091906112eb565b610a77565b005b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022390611375565b60405180910390fd5b60016002600084815260200190815260200160002060030160006101000a81548160ff0219169083600181111561026657610265611062565b5b02179055507f5cd8767f4486de3add411f428feb5bc9b1b3531977feb0c2eab980baf8a6a1e382600260008581526020019081526020016000206001016002600086815260200190815260200160002060020160016040516102cb949392919061149d565b60405180910390a15050565b823373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390611375565b60405180910390fd5b6000600260008681526020019081526020016000209050838160010190816103a49190611687565b50828160020190816103b69190611687565b507f5cd8767f4486de3add411f428feb5bc9b1b3531977feb0c2eab980baf8a6a1e38585858460030160009054906101000a900460ff166040516103fd9493929190611792565b60405180910390a15050505050565b803373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890611375565b60405180910390fd5b600260008381526020019081526020016000206000808201600090556001820160006104dd9190610c50565b6002820160006104ed9190610c50565b6003820160006101000a81549060ff02191690556003820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550507fd078b251d950cc55c44340be1db732337ef4939a76e1367ee271ad2cb19c46af8260405161055991906112a4565b60405180910390a15050565b61056d610afd565b6105776000610b84565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600080600190505b6001548111610640573373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361062d57818061062990611814565b9250505b808061063890611814565b9150506105ac565b5060008167ffffffffffffffff81111561065d5761065c610d96565b5b60405190808252806020026020018201604052801561069657816020015b610683610c90565b81526020019060019003908161067b5790505b509050600080600190505b6001548111610930573373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361091d57600260008281526020019081526020016000206040518060a00160405290816000820154815260200160018201805461074b906113c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610777906113c4565b80156107c45780601f10610799576101008083540402835291602001916107c4565b820191906000526020600020905b8154815290600101906020018083116107a757829003601f168201915b505050505081526020016002820180546107dd906113c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610809906113c4565b80156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b505050505081526020016003820160009054906101000a900460ff16600181111561088457610883611062565b5b600181111561089657610895611062565b5b81526020016003820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508383815181106109035761090261185c565b5b6020026020010181905250818061091990611814565b9250505b808061092890611814565b9150506106a1565b5081935050505090565b6001600081548092919061094d90611814565b91905055506040518060a0016040528060015481526020018381526020018281526020016000600181111561098557610984611062565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff168152506002600060015481526020019081526020016000206000820151816000015560208201518160010190816109d89190611687565b5060408201518160020190816109ee9190611687565b5060608201518160030160006101000a81548160ff02191690836001811115610a1a57610a19611062565b5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b6000600154905090565b610a7f610afd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ae89190610f8d565b60405180910390fd5b610afa81610b84565b50565b610b05610c48565b73ffffffffffffffffffffffffffffffffffffffff16610b23610579565b73ffffffffffffffffffffffffffffffffffffffff1614610b8257610b46610c48565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b799190610f8d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b508054610c5c906113c4565b6000825580601f10610c6e5750610c8d565b601f016020900490600052602060002090810190610c8c9190610ce7565b5b50565b6040518060a0016040528060008152602001606081526020016060815260200160006001811115610cc457610cc3611062565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115610d00576000816000905550600101610ce8565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d2b81610d18565b8114610d3657600080fd5b50565b600081359050610d4881610d22565b92915050565b600060208284031215610d6457610d63610d0e565b5b6000610d7284828501610d39565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610dce82610d85565b810181811067ffffffffffffffff82111715610ded57610dec610d96565b5b80604052505050565b6000610e00610d04565b9050610e0c8282610dc5565b919050565b600067ffffffffffffffff821115610e2c57610e2b610d96565b5b610e3582610d85565b9050602081019050919050565b82818337600083830152505050565b6000610e64610e5f84610e11565b610df6565b905082815260208101848484011115610e8057610e7f610d80565b5b610e8b848285610e42565b509392505050565b600082601f830112610ea857610ea7610d7b565b5b8135610eb8848260208601610e51565b91505092915050565b600080600060608486031215610eda57610ed9610d0e565b5b6000610ee886828701610d39565b935050602084013567ffffffffffffffff811115610f0957610f08610d13565b5b610f1586828701610e93565b925050604084013567ffffffffffffffff811115610f3657610f35610d13565b5b610f4286828701610e93565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7782610f4c565b9050919050565b610f8781610f6c565b82525050565b6000602082019050610fa26000830184610f7e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fdd81610d18565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101d578082015181840152602081019050611002565b60008484015250505050565b600061103482610fe3565b61103e8185610fee565b935061104e818560208601610fff565b61105781610d85565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106110a2576110a1611062565b5b50565b60008190506110b382611091565b919050565b60006110c3826110a5565b9050919050565b6110d3816110b8565b82525050565b6110e281610f6c565b82525050565b600060a0830160008301516111006000860182610fd4565b50602083015184820360208601526111188282611029565b915050604083015184820360408601526111328282611029565b915050606083015161114760608601826110ca565b50608083015161115a60808601826110d9565b508091505092915050565b600061117183836110e8565b905092915050565b6000602082019050919050565b600061119182610fa8565b61119b8185610fb3565b9350836020820285016111ad85610fc4565b8060005b858110156111e957848403895281516111ca8582611165565b94506111d583611179565b925060208a019950506001810190506111b1565b50829750879550505050505092915050565b600060208201905081810360008301526112158184611186565b905092915050565b6000806040838503121561123457611233610d0e565b5b600083013567ffffffffffffffff81111561125257611251610d13565b5b61125e85828601610e93565b925050602083013567ffffffffffffffff81111561127f5761127e610d13565b5b61128b85828601610e93565b9150509250929050565b61129e81610d18565b82525050565b60006020820190506112b96000830184611295565b92915050565b6112c881610f6c565b81146112d357600080fd5b50565b6000813590506112e5816112bf565b92915050565b60006020828403121561130157611300610d0e565b5b600061130f848285016112d6565b91505092915050565b600082825260208201905092915050565b7f4e6f74205461736b204f776e6572000000000000000000000000000000000000600082015250565b600061135f600e83611318565b915061136a82611329565b602082019050919050565b6000602082019050818103600083015261138e81611352565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113dc57607f821691505b6020821081036113ef576113ee611395565b5b50919050565b60008190508160005260206000209050919050565b60008154611417816113c4565b6114218186611318565b9450600182166000811461143c576001811461145257611485565b60ff198316865281151560200286019350611485565b61145b856113f5565b60005b8381101561147d5781548189015260018201915060208101905061145e565b808801955050505b50505092915050565b611497816110b8565b82525050565b60006080820190506114b26000830187611295565b81810360208301526114c4818661140a565b905081810360408301526114d8818561140a565b90506114e7606083018461148e565b95945050505050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261153d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611500565b6115478683611500565b95508019841693508086168417925050509392505050565b6000819050919050565b600061158461157f61157a84610d18565b61155f565b610d18565b9050919050565b6000819050919050565b61159e83611569565b6115b26115aa8261158b565b84845461150d565b825550505050565b600090565b6115c76115ba565b6115d2818484611595565b505050565b5b818110156115f6576115eb6000826115bf565b6001810190506115d8565b5050565b601f82111561163b5761160c816113f5565b611615846114f0565b81016020851015611624578190505b611638611630856114f0565b8301826115d7565b50505b505050565b600082821c905092915050565b600061165e60001984600802611640565b1980831691505092915050565b6000611677838361164d565b9150826002028217905092915050565b61169082610fe3565b67ffffffffffffffff8111156116a9576116a8610d96565b5b6116b382546113c4565b6116be8282856115fa565b600060209050601f8311600181146116f157600084156116df578287015190505b6116e9858261166b565b865550611751565b601f1984166116ff866113f5565b60005b8281101561172757848901518255600182019150602085019450602081019050611702565b868310156117445784890151611740601f89168261164d565b8355505b6001600288020188555050505b505050505050565b600061176482610fe3565b61176e8185611318565b935061177e818560208601610fff565b61178781610d85565b840191505092915050565b60006080820190506117a76000830187611295565b81810360208301526117b98186611759565b905081810360408301526117cd8185611759565b90506117dc606083018461148e565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061181f82610d18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611851576118506117e5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207ad385d99849a876d24c8876101a661a0ecd5f82b9c889986d25b8fecae11c5764736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/taskManager.sol:taskManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 199,
        "contract": "contracts/taskManager.sol:taskManager",
        "label": "taskCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 204,
        "contract": "contracts/taskManager.sol:taskManager",
        "label": "tasks",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Task)197_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(TaskStatus)185": {
        "encoding": "inplace",
        "label": "enum taskManager.TaskStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Task)197_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct taskManager.Task)",
        "numberOfBytes": "32",
        "value": "t_struct(Task)197_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Task)197_storage": {
        "encoding": "inplace",
        "label": "struct taskManager.Task",
        "members": [
          {
            "astId": 187,
            "contract": "contracts/taskManager.sol:taskManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 189,
            "contract": "contracts/taskManager.sol:taskManager",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 191,
            "contract": "contracts/taskManager.sol:taskManager",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 194,
            "contract": "contracts/taskManager.sol:taskManager",
            "label": "status",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(TaskStatus)185"
          },
          {
            "astId": 196,
            "contract": "contracts/taskManager.sol:taskManager",
            "label": "owner",
            "offset": 1,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}